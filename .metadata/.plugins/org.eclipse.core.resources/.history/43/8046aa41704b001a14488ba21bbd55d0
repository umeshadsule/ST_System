package com.nt.mul;




class Factory {
	int items;

	boolean itemsInFactory;

	synchronized void produce(int items) {
       System.out.println("inside produce");
		if(itemsInFactory) {
       System.out.println("inside produce if");
			try {
				System.out.println("produce before wait");
				wait();
				System.out.println("produce after wait");
			}
			catch(InterruptedException ie) {
				ie.printStackTrace();
			}

		}
		System.out.println("out of if produce");
        this.items=items;
       System.out.println("after produce this items");
		itemsInFactory=true;
		System.out.println("after boolean produce true");

		System.out.println("Produced items:"+items);

		notify();
	}

	synchronized int consumer() {
		if(! itemsInFactory) {
			try {

				wait();
			}catch(InterruptedException ie) {
				ie.printStackTrace();
			}

		}

		System.out.println("items Consumed"+items);
		itemsInFactory=false;

		notifyAll();

		return items;
	}

}

